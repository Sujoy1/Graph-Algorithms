// C++ program to find Kth node weight after s 
// orting of nodes directly connected to a node. 
#include<bits/stdc++.h> 
using namespace std; 

// Print Kth node number for each node after sorting 
// connected node according to their weight. 
void printkthnode(vector< pair<int, int> > adj[], 
						int wt[], int n, int k) 
{ 
	// Sort Adjacency List of all node on the basis 
	// of its weight. 
	for (int i = 0; i < n; i++) 
	sort(adj[i].begin(), adj[i].end()); 

	// Printing Kth node for each node. 
	for (int i = 0; i < n; i++) 
	{ 
		if (adj[i].size() >= k) 
		cout << adj[i][adj[i].size() - k].second; 
		else
		cout << "-1"; 
	} 
} 

// Driven Program 
int main() 
{ 
	int n = 3, k = 2; 
	int wt[] = { 2, 4, 3 }; 

	// Making adjacency list, storing the nodes 
	// along with their weight. 
	vector< pair<int, int> > adj[n+1]; 

	adj[0].push_back(make_pair(wt[2], 2)); 
	adj[2].push_back(make_pair(wt[0], 0)); 

	adj[0].push_back(make_pair(wt[1], 1)); 
	adj[1].push_back(make_pair(wt[0], 0)); 

	adj[1].push_back(make_pair(wt[2], 2)); 
	adj[2].push_back(make_pair(wt[1], 1)); 

	printkthnode(adj, wt, n, k); 
	return 0; 
} 
